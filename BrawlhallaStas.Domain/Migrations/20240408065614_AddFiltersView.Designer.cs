// <auto-generated />
using System;
using BrawlhallaStat.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BrawlhallaStat.Domain.Migrations
{
    [DbContext(typeof(BrawlhallaStatContext))]
    [Migration("20240408065614_AddFiltersView")]
    partial class AddFiltersView
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Death", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GameDetailId")
                        .HasColumnType("text");

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("TimeStamp")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameDetailId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Deaths");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Game", b =>
                {
                    b.Property<string>("AuthorId")
                        .HasColumnType("text");

                    b.Property<string>("DetailId")
                        .HasColumnType("text");

                    b.Property<string>("ReplayFileId")
                        .HasColumnType("text");

                    b.Property<int>("AuthorPlayerId")
                        .HasColumnType("integer");

                    b.HasKey("AuthorId", "DetailId", "ReplayFileId");

                    b.HasIndex("AuthorPlayerId");

                    b.HasIndex("DetailId");

                    b.HasIndex("ReplayFileId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.GameDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("EndOfMatchFanfareId")
                        .HasColumnType("integer");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer");

                    b.Property<bool>("OnlineGame")
                        .HasColumnType("boolean");

                    b.Property<string>("PlaylistName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RandomSeed")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("GameDetails");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Legend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FirstWeaponId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SecondWeaponId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FirstWeaponId");

                    b.HasIndex("SecondWeaponId");

                    b.ToTable("Legends");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GameDetailId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsWinner")
                        .HasColumnType("boolean");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Team")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameDetailId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.ReplayFile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReplayFiles");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Views.GameStatisticView", b =>
                {
                    b.Property<int>("EnemyLegendId")
                        .HasColumnType("integer");

                    b.Property<int>("EnemyWeaponId")
                        .HasColumnType("integer");

                    b.Property<string>("GameDetailId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GameType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsWin")
                        .HasColumnType("boolean");

                    b.Property<int>("LegendId")
                        .HasColumnType("integer");

                    b.Property<int?>("TeammateLegendId")
                        .HasColumnType("integer");

                    b.Property<int?>("TeammateWeaponId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WeaponId")
                        .HasColumnType("integer");

                    b.ToTable((string)null);

                    b.ToView("GameStatisticView", (string)null);
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.Identity.IdentityClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.Identity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.Identity.Token", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.Identity.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.Statistics.StatisticFilter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("EnemyLegendId")
                        .HasColumnType("integer");

                    b.Property<int?>("EnemyWeaponId")
                        .HasColumnType("integer");

                    b.Property<int?>("GameType")
                        .HasColumnType("integer");

                    b.Property<int?>("LegendId")
                        .HasColumnType("integer");

                    b.Property<int?>("TeammateLegendId")
                        .HasColumnType("integer");

                    b.Property<int?>("TeammateWeaponId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("StatisticFilters");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Death", b =>
                {
                    b.HasOne("BrawlhallaStat.Domain.GameEntities.GameDetail", "GameDetail")
                        .WithMany("Deaths")
                        .HasForeignKey("GameDetailId");

                    b.HasOne("BrawlhallaStat.Domain.GameEntities.Player", "Player")
                        .WithMany("Deaths")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameDetail");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Game", b =>
                {
                    b.HasOne("BrawlhallaStat.Domain.Identity.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrawlhallaStat.Domain.GameEntities.Player", "AuthorPlayer")
                        .WithMany()
                        .HasForeignKey("AuthorPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrawlhallaStat.Domain.GameEntities.GameDetail", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrawlhallaStat.Domain.GameEntities.ReplayFile", "ReplayFile")
                        .WithMany()
                        .HasForeignKey("ReplayFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("AuthorPlayer");

                    b.Navigation("Detail");

                    b.Navigation("ReplayFile");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.GameDetail", b =>
                {
                    b.OwnsOne("BrawlhallaStat.Domain.GameEntities.GameSettings", "Settings", b1 =>
                        {
                            b1.Property<string>("GameDetailId")
                                .HasColumnType("text");

                            b1.Property<int>("DamageRatio")
                                .HasColumnType("integer");

                            b1.Property<int>("Duration")
                                .HasColumnType("integer");

                            b1.Property<int>("Flags")
                                .HasColumnType("integer");

                            b1.Property<int>("GameSpeed")
                                .HasColumnType("integer");

                            b1.Property<int>("LevelSetId")
                                .HasColumnType("integer");

                            b1.Property<int>("MaxPlayers")
                                .HasColumnType("integer");

                            b1.Property<int>("RoundDuration")
                                .HasColumnType("integer");

                            b1.Property<int>("ScoreToWin")
                                .HasColumnType("integer");

                            b1.Property<int>("ScoringType")
                                .HasColumnType("integer");

                            b1.Property<int>("StartingLives")
                                .HasColumnType("integer");

                            b1.HasKey("GameDetailId");

                            b1.ToTable("GameDetails");

                            b1.WithOwner()
                                .HasForeignKey("GameDetailId");
                        });

                    b.Navigation("Settings")
                        .IsRequired();
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Legend", b =>
                {
                    b.HasOne("BrawlhallaStat.Domain.GameEntities.Weapon", "FirstWeapon")
                        .WithMany()
                        .HasForeignKey("FirstWeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrawlhallaStat.Domain.GameEntities.Weapon", "SecondWeapon")
                        .WithMany()
                        .HasForeignKey("SecondWeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FirstWeapon");

                    b.Navigation("SecondWeapon");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Player", b =>
                {
                    b.HasOne("BrawlhallaStat.Domain.GameEntities.GameDetail", "GameDetail")
                        .WithMany("Players")
                        .HasForeignKey("GameDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BrawlhallaStat.Domain.GameEntities.Customization", "Customization", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .HasColumnType("integer");

                            b1.Property<int>("AvatarId")
                                .HasColumnType("integer");

                            b1.Property<int>("ColorId")
                                .HasColumnType("integer");

                            b1.Property<int>("LoseTaunt")
                                .HasColumnType("integer");

                            b1.Property<int>("ThemeId")
                                .HasColumnType("integer");

                            b1.Property<int>("WinTaunt")
                                .HasColumnType("integer");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");
                        });

                    b.OwnsOne("BrawlhallaStat.Domain.GameEntities.LegendDetails", "LegendDetails", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .HasColumnType("integer");

                            b1.Property<int>("CostumeId")
                                .HasColumnType("integer");

                            b1.Property<int>("LegendId")
                                .HasColumnType("integer");

                            b1.Property<int>("Stance")
                                .HasColumnType("integer");

                            b1.Property<int>("WeaponSkins")
                                .HasColumnType("integer");

                            b1.HasKey("PlayerId");

                            b1.HasIndex("LegendId");

                            b1.ToTable("Players");

                            b1.HasOne("BrawlhallaStat.Domain.GameEntities.Legend", "Legend")
                                .WithMany()
                                .HasForeignKey("LegendId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");

                            b1.Navigation("Legend");
                        });

                    b.Navigation("Customization")
                        .IsRequired();

                    b.Navigation("GameDetail");

                    b.Navigation("LegendDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.Identity.IdentityClaim", b =>
                {
                    b.HasOne("BrawlhallaStat.Domain.Identity.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.Identity.Role", b =>
                {
                    b.HasOne("BrawlhallaStat.Domain.Identity.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.Identity.Token", b =>
                {
                    b.HasOne("BrawlhallaStat.Domain.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.Statistics.StatisticFilter", b =>
                {
                    b.HasOne("BrawlhallaStat.Domain.Identity.User", "User")
                        .WithMany("StatisticFilters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.GameDetail", b =>
                {
                    b.Navigation("Deaths");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.GameEntities.Player", b =>
                {
                    b.Navigation("Deaths");
                });

            modelBuilder.Entity("BrawlhallaStat.Domain.Identity.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Roles");

                    b.Navigation("StatisticFilters");
                });
#pragma warning restore 612, 618
        }
    }
}
